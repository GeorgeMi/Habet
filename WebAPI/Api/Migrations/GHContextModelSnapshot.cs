// <auto-generated />
using System;
using Api.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Api.Migrations
{
    [DbContext(typeof(GHContext))]
    partial class GHContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Gabriel")
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Api.Models.MigrationHistory", b =>
                {
                    b.Property<string>("MigrationId")
                        .HasMaxLength(150);

                    b.Property<string>("ContextKey")
                        .HasMaxLength(300);

                    b.Property<byte[]>("Model")
                        .IsRequired();

                    b.Property<string>("ProductVersion")
                        .IsRequired()
                        .HasMaxLength(32);

                    b.HasKey("MigrationId", "ContextKey")
                        .HasName("PK_dbo.__MigrationHistory");

                    b.ToTable("__MigrationHistory","dbo");
                });

            modelBuilder.Entity("Api.Models.Orders", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<string>("Currency");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("PaymentMethod");

                    b.Property<string>("Phone");

                    b.Property<double>("Shipping");

                    b.Property<string>("State");

                    b.Property<double>("Subtotal");

                    b.Property<int>("UserId");

                    b.Property<string>("ZipCode");

                    b.HasKey("OrderId")
                        .HasName("PK_dbo.Orders");

                    b.HasIndex("UserId")
                        .HasName("IX_UserId");

                    b.ToTable("Orders","dbo");
                });

            modelBuilder.Entity("Api.Models.Products", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description_EN");

                    b.Property<string>("Description_IT");

                    b.Property<string>("Description_RO");

                    b.Property<string>("Gender");

                    b.Property<string>("Name_EN");

                    b.Property<string>("Name_IT");

                    b.Property<string>("Name_RO");

                    b.Property<double>("Price");

                    b.Property<string>("Type");

                    b.HasKey("ProductId")
                        .HasName("PK_dbo.Products");

                    b.ToTable("Products","dbo");
                });

            modelBuilder.Entity("Api.Models.ProductsImages", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<string>("ContentType");

                    b.Property<byte[]>("Data");

                    b.Property<DateTime>("Date");

                    b.Property<int>("Height");

                    b.Property<int>("Length");

                    b.Property<byte[]>("Name");

                    b.Property<int>("ProductId");

                    b.Property<int>("Width");

                    b.HasKey("Id");

                    b.ToTable("ProductsImages","dbo");
                });

            modelBuilder.Entity("Api.Models.ProductsOrders", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount");

                    b.Property<int>("OrderId");

                    b.Property<double>("ProductPrice");

                    b.Property<int?>("ProductProductId")
                        .HasColumnName("Product_ProductId");

                    b.HasKey("ProductId")
                        .HasName("PK_dbo.ProductsOrders");

                    b.HasIndex("OrderId")
                        .HasName("IX_OrderId");

                    b.HasIndex("ProductProductId")
                        .HasName("IX_Product_ProductId");

                    b.ToTable("ProductsOrders","dbo");
                });

            modelBuilder.Entity("Api.Models.Tokens", b =>
                {
                    b.Property<int>("TokenId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("TokenString");

                    b.Property<int>("UserId");

                    b.HasKey("TokenId")
                        .HasName("PK_dbo.Tokens");

                    b.HasIndex("UserId");

                    b.ToTable("Tokens","dbo");
                });

            modelBuilder.Entity("Api.Models.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Password")
                        .HasMaxLength(50);

                    b.Property<string>("Phone")
                        .HasMaxLength(32);

                    b.Property<string>("Role")
                        .HasMaxLength(50);

                    b.Property<string>("Verified")
                        .HasMaxLength(50);

                    b.HasKey("UserId")
                        .HasName("PK_dbo.Users");

                    b.ToTable("Users","dbo");
                });

            modelBuilder.Entity("Api.Models.UsersAddresses", b =>
                {
                    b.Property<int>("UserAdressId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<string>("State")
                        .HasMaxLength(32)
                        .IsUnicode(false);

                    b.Property<int>("UserId");

                    b.Property<string>("ZipCode");

                    b.HasKey("UserAdressId")
                        .HasName("PK_dbo.UsersAddresses");

                    b.HasIndex("UserId")
                        .HasName("IX_UserId");

                    b.ToTable("UsersAddresses","dbo");
                });

            modelBuilder.Entity("Api.Models.Orders", b =>
                {
                    b.HasOne("Api.Models.Users", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_dbo.Orders_dbo.Users_UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Api.Models.ProductsOrders", b =>
                {
                    b.HasOne("Api.Models.Orders", "Order")
                        .WithMany("ProductsOrders")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FK_dbo.ProductsOrders_dbo.Orders_OrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Api.Models.Products", "ProductProduct")
                        .WithMany("ProductsOrders")
                        .HasForeignKey("ProductProductId")
                        .HasConstraintName("FK_dbo.ProductsOrders_dbo.Products_Product_ProductId");
                });

            modelBuilder.Entity("Api.Models.Tokens", b =>
                {
                    b.HasOne("Api.Models.Users", "User")
                        .WithMany("Tokens")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_dbo.Tokens_dbo.Users_UserId");
                });

            modelBuilder.Entity("Api.Models.UsersAddresses", b =>
                {
                    b.HasOne("Api.Models.Users", "User")
                        .WithMany("UsersAddresses")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_dbo.UsersAddresses_dbo.Users_UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
